name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest
    environment:
      name: preview-${{ github.event.pull_request.number }}
      url: https://pr-${{ github.event.pull_request.number }}-avalon-analytics.cmotlin.workers.dev
    steps:
      - uses: actions/checkout@v5
      - uses: jdx/mise-action@v3

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup preview configuration
        run: |
          # Replace the placeholder with the actual dev database ID
          if [ -n "${{ secrets.CLOUDFLARE_DEV_DB_ID }}" ]; then
            sed -i 's/PLACEHOLDER_DEV_DB_ID/${{ secrets.CLOUDFLARE_DEV_DB_ID }}/g' wrangler.preview.jsonc
            echo "Using development database for preview deployment"
          else
            echo "Warning: CLOUDFLARE_DEV_DB_ID not set, using production config"
          fi

      - name: Run migrations on dev database
        if: ${{ secrets.CLOUDFLARE_DEV_DB_ID != '' }}
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 migrations apply avalon-analytics-dev --remote
        continue-on-error: true

      - name: Fast build and deploy
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerConfigPath: ${{ secrets.CLOUDFLARE_DEV_DB_ID && 'wrangler.preview.jsonc' || 'wrangler.jsonc' }}
          preCommands: |
            pnpm install --frozen-lockfile --ignore-scripts
            npx prisma generate
            mkdir -p .wrangler/state/v3/d1
            RWSDK_DEPLOY=1 npx vite build
          command: versions upload --preview-alias pr-${{ github.event.pull_request.number }}
        env:
          RWSDK_DEPLOY: 1

      - name: Comment PR with preview URL
        uses: actions/github-script@v8
        with:
          script: |
            const prNumber = context.issue.number;
            // Versioned preview URL format: <VERSION_PREFIX>-<WORKER_NAME>.<SUBDOMAIN>.workers.dev
            const previewUrl = `https://pr-${prNumber}-avalon-analytics.cmotlin.workers.dev`;

            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.data.find(comment =>
              comment.body.includes('ðŸš€ Preview deployed:')
            );

            const body = `ðŸš€ Preview deployed: ${previewUrl}\n\n_Generated via versioned preview URL_`;

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
