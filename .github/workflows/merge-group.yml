# Jobs that run on merge_group, meaning they must pass before changes land. They also run on pull_request.

on:
    pull_request:
    merge_group:

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    lint:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            checks: write
            pull-requests: write
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2

            - name: Get pnpm store directory
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - run: just lint-ci
              continue-on-error: true

            - uses: ataylorme/eslint-annotate-action@3.0.0
              if: always()

    format:
        name: Format (Biome)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2

            - name: Get pnpm store directory
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - run: just format-ci

    typecheck:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2

            - name: Get pnpm store directory
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - run: just typecheck-ci

    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2

            - name: Get pnpm store directory
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - run: just build-ci

    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2

            - name: Get pnpm store directory
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - run: just test-ci

    check-generated:
        name: Check generated files
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2

            - name: Get pnpm store directory
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - run: pnpm install --frozen-lockfile
            - run: npm run generate
            - run: git diff --exit-code

    all-checks:
        name: All checks
        needs: [lint, format, typecheck, build, test, check-generated]
        runs-on: ubuntu-latest
        steps:
            - name: All checks passed
              run: echo "All checks passed!"
